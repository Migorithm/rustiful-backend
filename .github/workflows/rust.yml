name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
            target
            ~/.cargo
        key: ${{ matrix.os }}-migorithm-${{ hashFiles('**/Cargo.toml') }}
    - name: Print Target
      run: rustup show

    
  build-static-ubuntu:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
          path: |
              target
              ~/.cargo
              ~/.rustup
          key: ubuntu-static-build-${{ hashFiles('**/Cargo.toml') }}
    - name: Setup dependency
      run: |
          sudo apt install -y musl-tools
          rustup target add x86_64-unknown-linux-musl
    - name: Build Debug
      run: |
          RUSTFLAGS='-C target-feature=+crt-static' cargo build --target x86_64-unknown-linux-gnu --verbose
          cargo build --target x86_64-unknown-linux-musl --verbose
    - name: Build Release
      run: |
          RUSTFLAGS='-C target-feature=+crt-static' cargo build --target x86_64-unknown-linux-gnu --release --verbose
          cargo build --target x86_64-unknown-linux-musl --release --verbose


  tests:
    needs: build-static-ubuntu
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
            target
            ~/.cargo
        key: ${{ matrix.os }}-migorithm-${{ hashFiles('**/Cargo.toml') }}

    - name: Start containers
      run: |
        cargo install sqlx-cli --no-default-features --features native-tls,postgres
        docker-compose -f "docker-compose.yml" up -d --build
        docker-compose ps
        make upgrade 
        
    - name: Lint tests
      run: cargo clippy
    
    - name: Run tests
      run: cargo test -- --test-threads 1 --nocapture
    
